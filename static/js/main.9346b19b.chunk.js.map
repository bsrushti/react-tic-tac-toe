{"version":3,"sources":["App.js","index.js"],"names":["Square","react_default","a","createElement","className","this","props","id","style","width","onClick","value","Component","Game","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","count","state","content","player1","player2","winningCombinations","document","getElementById","innerText","push","checkWinnigCondition","e","target","player1Move","player2Move","set1","set2","every","y","includes","player","_this2","some","combination","isSubset","App_Square","tic","bind","renderCell","ReactDOM","render","src_App"],"mappings":"yNAIMA,0LAEF,OACEC,EAAAC,EAAAC,cAAA,MACEC,UAAWC,KAAKC,MAAMF,UACtBG,GAAIF,KAAKC,MAAMC,GACfC,MAAO,CAAEC,MAAO,IAChBC,QAASL,KAAKC,MAAMI,SAEnBL,KAAKC,MAAMK,cATCC,cAkGNC,cAlFb,SAAAA,EAAYP,GAAO,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAQ,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAV,KAAAU,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAd,KAAMC,KACDc,MAAQ,EACbN,EAAKO,MAAQ,CAAEC,QAAS,KACxBR,EAAKS,QAAU,GACfT,EAAKU,QAAU,GACfV,EAAKW,oBAAsB,CACzB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAdQX,2EAkBPP,GACVmB,SAASC,eAAepB,GAAIqB,UAAY,IACxCvB,KAAKkB,QAAQM,MAAMtB,GACfF,KAAKyB,qBAAqBzB,KAAKkB,WACjCG,SAASC,eAAe,aAAaC,UAAY,uDAGzCrB,GACVmB,SAASC,eAAepB,GAAIqB,UAAY,IACxCvB,KAAKmB,QAAQK,MAAMtB,GACfF,KAAKyB,qBAAqBzB,KAAKmB,WACjCE,SAASC,eAAe,aAAaC,UAAY,+CAGjDG,GACF,IAAIxB,EAAKwB,EAAEC,OAAOzB,GAOlB,OANIF,KAAKe,MAAQ,IAAM,EACrBf,KAAK4B,YAAY1B,GAEjBF,KAAK6B,YAAY3B,GAEnBF,KAAKe,QACEW,EAAEC,wCAGFG,EAAMC,GACb,OAAOD,EAAKE,MAAM,SAAAC,GAAC,OAAIF,EAAKG,SAASD,kDAGlBE,GAAQ,IAAAC,EAAApC,KAC3B,OAAOA,KAAKoB,oBAAoBiB,KAAK,SAAAC,GAAW,OAC9CF,EAAKG,SAASD,EAAaH,wCAIpBjC,EAAII,GACb,OACEV,EAAAC,EAAAC,cAAC0C,EAAD,CACElC,MAAOA,EACPP,UAAU,MACVG,GAAIA,EACJG,QAASL,KAAKyC,IAAIC,KAAK1C,yCAM3B,OACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYG,GAAG,aAC5BN,EAAAC,EAAAC,cAAA,MAAII,GAAG,YAAYC,MAAO,CAAEC,MAAO,MAChCJ,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,SAC9BjB,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,SAC9BjB,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,SAC9BjB,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,SAC9BjB,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,SAC9BjB,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,SAC9BjB,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,SAC9BjB,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,SAC9BjB,KAAK2C,WAAW,EAAG3C,KAAKgB,MAAMC,kBA7EtBV,aCbnBqC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASzB,SAASC,eAAe","file":"static/js/main.9346b19b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nclass Square extends Component {\n  render() {\n    return (\n      <li\n        className={this.props.className}\n        id={this.props.id}\n        style={{ width: 70 }}\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n      </li>\n    );\n  }\n}\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.count = 0;\n    this.state = { content: \"#\" };\n    this.player1 = [];\n    this.player2 = [];\n    this.winningCombinations = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n  }\n\n  player1Move(id) {\n    document.getElementById(id).innerText = \"O\";\n    this.player1.push(+id);\n    if (this.checkWinnigCondition(this.player1))\n      document.getElementById(\"container\").innerText = \"Player1 has won\";\n  }\n\n  player2Move(id) {\n    document.getElementById(id).innerText = \"X\";\n    this.player2.push(+id);\n    if (this.checkWinnigCondition(this.player2))\n      document.getElementById(\"container\").innerText = \"Player2 has won\";\n  }\n\n  tic(e) {\n    let id = e.target.id;\n    if (this.count % 2 === 0) {\n      this.player1Move(id);\n    } else {\n      this.player2Move(id);\n    }\n    this.count++;\n    return e.target;\n  }\n\n  isSubset(set1, set2) {\n    return set1.every(y => set2.includes(y));\n  }\n\n  checkWinnigCondition(player) {\n    return this.winningCombinations.some(combination =>\n      this.isSubset(combination, player)\n    );\n  }\n\n  renderCell(id, value) {\n    return (\n      <Square\n        value={value}\n        className=\"tic\"\n        id={id}\n        onClick={this.tic.bind(this)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\" id=\"container\">\n        <ul id=\"gameBoard\" style={{ width: 350 }}>\n          {this.renderCell(0, this.state.content)}\n          {this.renderCell(1, this.state.content)}\n          {this.renderCell(2, this.state.content)}\n          {this.renderCell(3, this.state.content)}\n          {this.renderCell(4, this.state.content)}\n          {this.renderCell(5, this.state.content)}\n          {this.renderCell(6, this.state.content)}\n          {this.renderCell(7, this.state.content)}\n          {this.renderCell(8, this.state.content)}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}